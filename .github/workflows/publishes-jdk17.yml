name: "Publishes-jdk17"

on:
  push:
    branches: [ jdk17 ]

jobs:
  # job 1
  publish-to-OSSRH:
    name: "Publish to OSSRH"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      # step 1
      - name: "Checkout"
        uses: actions/checkout@v2.4.0
      # step 2
      - name: "Setup Java JDK"
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'zulu'
          java-version: 8
          server-id: oss_seata
          server-username: OSSRH_USERNAME # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
          server-password: OSSRH_PASSWORD # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE
      # step 3
      - name: "Publish to OSSRH"
        if: matrix.type == 'OSSRH'
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USER }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./mvnw -T 4C clean deploy -Prelease,release-by-github-actions -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

  # job 2
  publish-image-to-dockerhub:
    name: "Publish image to DockerHub"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [
          8,
          8-slim,
          17,
          17-slim
        ]
    steps:
      # step 1
      - name: "Checkout"
        uses: actions/checkout@v2.4.0
      # step 2
      - name: "Setup Java JDK"
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      # step 3 based on java8
      - name: "Publish image to DockerHub based on java8"
        if: matrix.java == 8
        env:
          IMAGE_NAME: openjdk:8u342
        run: |
          if [ "${{ github.ref_name }}" == "develop" ] || [ "${{ github.ref_name }}" == "snapshot" ]; then
            ./mvnw -T 4C clean package -Pimage               -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          else
            ./mvnw -T 4C clean package -Pimage,release-image-based-on-java8     -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          fi
      # step 3 based on java8-slim
      - name: "Publish image to DockerHub based on java8-slim"
        if: ${{ matrix.java == '8-slim' && github.ref_name != 'develop' && github.ref_name != 'snapshot' }}
        env:
          IMAGE_NAME: openjdk:8u342-slim
        run: |
          ./mvnw -T 4C clean package -Pimage,release-image-based-on-java8-slim  -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
      # step 3 based on java17
      - name: "Publish image to DockerHub based on java17"
        if: ${{ matrix.java == 17 && github.ref_name != 'develop' && github.ref_name != 'snapshot' }}
        env:
          IMAGE_NAME: openjdk:17.0.2
        run: |
          ./mvnw -T 4C clean package -Pimage,release-image-based-on-java17      -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
      # step 3 based on java17-slim
      - name: "Publish image to DockerHub based on java17-slim"
        if: ${{ matrix.java == '17-slim' && github.ref_name != 'develop' && github.ref_name != 'snapshot' }}
        env:
          IMAGE_NAME: openjdk:17.0.2-slim
        run: |
          ./mvnw -T 4C clean package -Pimage,release-image-based-on-java17-slim -DskipTests -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
