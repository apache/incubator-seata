{
    "Name": "simpleCompensationStateMachine",
    "Comment": "带补偿定义的测试状态机定义",
    "StartAt": "FirstState",
    "Version": "0.0.1",
    "States": {
        "FirstState": {
            "Type": "ServiceTask",
            "ServiceName": "demoService",
            "ServiceMethod": "foo",
            "CompensateState": "CompensateFirstState",
            "Next": "ChoiceState",
            "Input": [
                {
                    "fooInput": "$.[a]",
                    "throwException": "$.[fooThrowException]"
                }
            ],
            "Output": {
                "fooResult": "$.#root"
            }
        },
        "ChoiceState":{
            "Type": "Choice",
            "Choices":[
                {
                    "Expression":"[a] == 1",
                    "Next":"SecondState"
                },
                {
                    "Expression":"[a] == 2",
                    "Next":"ThirdState"
                }
            ],
            "Default":"Fail"
        },
        "SecondState": {
            "Type": "ServiceTask",
            "ServiceName": "demoService",
            "ServiceMethod": "bar",
            "CompensateState": "CompensateSecondState",
            "Input": [
                {
                    "barInput": "$.[fooResult]",
                    "throwException": "$.[barThrowException]"
                }
            ],
            "Output": {
                "barResult": "$.#root"
            },
            "Status": {
                "SU": "#root != null",
                "FA": "#root == null",
                "UN": "$Exception{io.seata.saga.engine.exception.EngineExecutionException}"
            },
            "Catch": [
                {
                    "Exceptions": [
                        "io.seata.common.exception.FrameworkException"
                    ],
                    "Next": "CompensationStart"
                }
            ],
            "Next": "Succeed"
        },
        "ThirdState": {
            "Type": "ServiceTask",
            "ServiceName": "demoService",
            "ServiceMethod": "foo",
            "Input": [
                {
                    "fooInput": "$.[fooResult]"
                }
            ],
            "Output": {
                "fooResult": "$.#root"
            },
            "Next": "Succeed"
        },
        "CompensateFirstState": {
            "Type": "ServiceTask",
            "ServiceName": "demoService",
            "ServiceMethod": "compensateFoo",
            "Input": [
                {
                    "compensateFooInput": "$.[fooResult]",
                    "throwException": "$.[compensateFooThrowException]"
                }
            ]
        },
        "CompensateSecondState": {
            "Type": "ServiceTask",
            "ServiceName": "demoService",
            "ServiceMethod": "compensateBar",
            "Input": [
                {
                    "compensateBarInput": "$.[barResult]",
                    "throwException": "$.[compensateBarThrowException]"
                }
            ]
        },
        "CompensationStart": {
            "Type": "CompensationStart",
            "Next": "Fail"
        },
        "Succeed": {
            "Type":"Succeed"
        },
        "Fail": {
            "Type":"Fail",
            "ErrorCode": "NOT_FOUND",
            "Message": "not found"
        }
    }
}