<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~  Copyright 1999-2019 Seata.io Group.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.seata.saga.engine.store.db.MybatisConfig">

	<!--****************************** StateMachine定义相关SQL语句 ******************************-->
	<resultMap id="StateMachineResultMap" type="io.seata.saga.statelang.domain.impl.StateMachineImpl">
		<id property="id" column="id" />
		<result property="tenantId" column="tenant_id" />
		<result property="appName" column="app_name" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP" />
		<result property="version" column="ver" />
		<result property="content" column="content" />
		<result property="type" column="type" />
		<result property="comment" column="comment" />
		<result property="isPersist" column="is_persist" jdbcType="TINYINT"/>
		<result property="recoverStrategy" column="recover_strategy"/>
	</resultMap>

	<sql id="StateMachineFields">
		id,
		tenant_id,
		app_name,
		name,
		status,
		gmt_create,
		ver,
		type,
		content,
		recover_strategy
	</sql>

	<select id="getStateMachineById" resultMap="StateMachineResultMap" parameterType="string">
		SELECT
		<include refid="StateMachineFields" />
		FROM
		${TABLE_PREFIX}state_machine_def
		WHERE
		id = #{id}
	</select>

	<select id="getLastVersionStateMachine" resultMap="StateMachineResultMap" parameterType="map">
		SELECT
		<include refid="StateMachineFields" />
		FROM
		${TABLE_PREFIX}state_machine_def
		WHERE
		name = #{name}
		AND
		tenant_id = #{tenantId}
		ORDER BY gmt_create DESC
		LIMIT 1
	</select>

	<insert id="insertStateMachine" parameterType="io.seata.saga.statelang.domain.impl.StateMachineImpl">
		INSERT INTO
		${TABLE_PREFIX}state_machine_def
		(
		<include refid="StateMachineFields" />
		)
		VALUES
		(
		#{id, jdbcType=VARCHAR},
		#{tenantId, jdbcType=VARCHAR},
		#{appName, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		#{gmtCreate, jdbcType=TIMESTAMP},
		#{version, jdbcType=VARCHAR},
		#{type, jdbcType=VARCHAR},
		#{content, jdbcType=CLOB},
		#{recoverStrategy, jdbcType=VARCHAR}
		)
	</insert>

	<!-- ********************************************************************** -->

	<!--****************************** StateMachine执行实例相关SQL语句 ******************************-->
	<resultMap id="StateMachineInstanceResultMap" type="io.seata.saga.statelang.domain.impl.StateMachineInstanceImpl">
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="machine_id" jdbcType="VARCHAR" property="machineId" />
		<result column="tenant_id" jdbcType="VARCHAR" property="tenantId"/>
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="business_key" jdbcType="VARCHAR" property="businessKey" />
		<result column="gmt_started" jdbcType="TIMESTAMP" property="gmtStarted" />
		<result column="gmt_end" jdbcType="TIMESTAMP" property="gmtEnd" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="compensation_status" jdbcType="VARCHAR" property="compensationStatus"/>
		<result column="is_running" jdbcType="TINYINT" property="isRunning"/>
		<result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
		<result column="start_params" jdbcType="VARCHAR" property="serializedStartParams"/>
		<result column="end_params" jdbcType="VARCHAR" property="serializedEndParams"/>
		<result column="excep" jdbcType="BLOB" property="serializedException"/>
	</resultMap>

	<sql id="StateMachineInstanceFields">
		id,
		machine_id,
		tenant_id,
		parent_id,
		business_key,
		gmt_started,
		gmt_end,
		status,
		compensation_status,
		is_running,
		gmt_updated,
		start_params,
		end_params,
		excep
	</sql>
	<sql id="StateMachineInstanceFieldsWithoutParams">
		id,
		machine_id,
		tenant_id,
		parent_id,
		business_key,
		gmt_started,
		gmt_end,
		status,
		compensation_status,
		is_running,
		gmt_updated
	</sql>

	<insert id="recordStateMachineStarted" parameterType="io.seata.saga.statelang.domain.impl.StateMachineInstanceImpl">
		INSERT
		INTO
		${TABLE_PREFIX}state_machine_inst
		(id, machine_id, tenant_id, parent_id, gmt_started, business_key, start_params, is_running, gmt_updated)
		VALUES
		(
		#{id, jdbcType=VARCHAR},
		#{machineId, jdbcType=VARCHAR},
		#{tenantId, jdbcType=VARCHAR},
		#{parentId, jdbcType=VARCHAR},
		#{gmtStarted, jdbcType=TIMESTAMP},
		#{businessKey, jdbcType=VARCHAR},
		#{serializedStartParams, jdbcType=CLOB},
		#{isRunning, jdbcType=TINYINT},
		current_timestamp
		)
	</insert>

	<update id="recordStateMachineFinished" parameterType="io.seata.saga.statelang.domain.impl.StateMachineInstanceImpl">
		UPDATE
		${TABLE_PREFIX}state_machine_inst
		<set>
			<if test="gmtEnd != null">gmt_end = #{gmtEnd, jdbcType=TIMESTAMP},</if>
			<if test="serializedException != null">excep = #{serializedException, jdbcType=BLOB},</if>
			<if test="serializedEndParams != null">end_params = #{serializedEndParams, jdbcType=CLOB},</if>
			<if test="status != null">status = #{status, jdbcType=VARCHAR},</if>
			<if test="compensationStatus != null">compensation_status = #{compensationStatus, jdbcType=VARCHAR},</if>
			<if test="isRunning != null">is_running = #{isRunning, jdbcType=TINYINT},</if>
			gmt_updated = current_timestamp
		</set>
		where id = #{id}
	</update>

	<update id="updateStateMachineRunningStatus" parameterType="io.seata.saga.statelang.domain.impl.StateMachineInstanceImpl">
		UPDATE
		${TABLE_PREFIX}state_machine_inst
		<set>
			<if test="isRunning != null">is_running = #{isRunning, jdbcType=TINYINT},</if>
			gmt_updated = current_timestamp
		</set>
		where id = #{id}
	</update>

	<select id="getStateMachineInstanceById" parameterType="string" resultMap="StateMachineInstanceResultMap">
		SELECT
		<include refid="StateMachineInstanceFields" />
		FROM
		${TABLE_PREFIX}state_machine_inst
		WHERE
		id = #{id, jdbcType=VARCHAR}
	</select>

	<select id="getStateMachineInstanceByBusinessKey" parameterType="map" resultMap="StateMachineInstanceResultMap">
		SELECT
		<include refid="StateMachineInstanceFields" />
		FROM
		${TABLE_PREFIX}state_machine_inst
		WHERE
		business_key = #{businessKey, jdbcType=VARCHAR}
		AND
		tenant_id = #{tenantId, jdbcType=VARCHAR}
	</select>

	<select id="queryStateMachineInstanceByParentId" parameterType="string" resultMap="StateMachineInstanceResultMap">
		SELECT
		<include refid="StateMachineInstanceFieldsWithoutParams" />
		FROM
		${TABLE_PREFIX}state_machine_inst
		WHERE
		parent_id = #{parentId, jdbcType=VARCHAR}
		ORDER BY gmt_started DESC
	</select>

	<!-- ********************************************************************** -->



	<!--****************************** State执行实例相关SQL语句 ******************************-->
	<resultMap id="StateInstanceResultMap" type="io.seata.saga.statelang.domain.impl.StateInstanceImpl">
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="machine_inst_id" jdbcType="VARCHAR" property="machineInstanceId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="business_key" jdbcType="VARCHAR" property="businessKey"/>
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="gmt_started" jdbcType="TIMESTAMP" property="gmtStarted" />
		<result column="gmt_end" jdbcType="TIMESTAMP" property="gmtEnd" />
		<result column="service_name" jdbcType="VARCHAR" property="serviceName"/>
		<result column="service_method" jdbcType="VARCHAR" property="serviceName"/>
		<result column="service_type" jdbcType="VARCHAR" property="serviceType"/>
		<result column="is_for_update" property="isForUpdate"/>
		<result column="state_id_compensated_for" jdbcType="VARCHAR" property="stateIdCompensatedFor" />
		<result column="state_id_retried_for" jdbcType="VARCHAR" property="stateIdRetriedFor" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="input_params" jdbcType="VARCHAR" property="serializedInputParams"/>
		<result column="output_params" jdbcType="VARCHAR" property="serializedOutputParams"/>
		<result column="excep" jdbcType="BLOB" property="serializedException"/>
	</resultMap>

	<sql id="StateInstanceFields">
		id,
		machine_inst_id,
		name,
		type,
		business_key,
		gmt_started,
		service_name,
		service_method,
		service_type,
		is_for_update,
		status,
		input_params,
		output_params,
		excep,
		gmt_end,
		state_id_compensated_for,
		state_id_retried_for
	</sql>

	<insert id="recordStateStarted" parameterType="io.seata.saga.statelang.domain.impl.StateInstanceImpl">
		INSERT INTO
		${TABLE_PREFIX}state_inst
		(
		id,
		machine_inst_id,
		name,
		type,
		gmt_started,
		service_name,
		service_method,
		service_type,
		is_for_update,
		input_params,
		status,
		business_key,
		state_id_compensated_for,
		state_id_retried_for
		)
		VALUES
		(
		#{id, jdbcType=VARCHAR},
		#{machineInstanceId, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{type, jdbcType=VARCHAR},
		#{gmtStarted, jdbcType=TIMESTAMP},
		#{serviceName, jdbcType=VARCHAR},
		#{serviceMethod, jdbcType=VARCHAR},
		#{serviceType, jdbcType=VARCHAR},
		#{isForUpdate, jdbcType=INTEGER},
		#{serializedInputParams, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		#{businessKey, jdbcType=VARCHAR},
		#{stateIdCompensatedFor, jdbcType=VARCHAR},
		#{stateIdRetriedFor, jdbcType=VARCHAR}
		)
	</insert>

	<update id="recordStateFinished" parameterType="io.seata.saga.statelang.domain.impl.StateInstanceImpl">
		UPDATE
		${TABLE_PREFIX}state_inst
		SET
		gmt_end = #{gmtEnd, jdbcType=TIMESTAMP},
		excep = #{serializedException, jdbcType=BLOB},
		status = #{status, jdbcType=VARCHAR},
		output_params = #{serializedInputParams, jdbcType=CLOB}
		WHERE
		id = #{id, jdbcType=VARCHAR}
		AND
		machine_inst_id = #{machineInstanceId, jdbcType=VARCHAR}
	</update>

	<update id="updateStateExecutionStatus" parameterType="io.seata.saga.statelang.domain.impl.StateInstanceImpl">
		UPDATE ${TABLE_PREFIX}state_inst
		SET
		status = #{status, jdbcType=VARCHAR}
		WHERE
		machine_inst_id = #{machineInstanceId, jdbcType=VARCHAR}
		AND
		id = #{id, jdbcType=VARCHAR}
	</update>


	<select id="queryStateInstanceListByMachineInstanceId" parameterType="string" resultMap="StateInstanceResultMap">
		SELECT
		<include refid="StateInstanceFields" />
		FROM
		${TABLE_PREFIX}state_inst
		WHERE
		machine_inst_id = #{stateMachineInstanceId, jdbcType=VARCHAR}
		ORDER by gmt_started, ID ASC
	</select>

	<select id="getStateInstanceByIdAndMachineInstId" parameterType="map" resultMap="StateInstanceResultMap">
		SELECT
		<include refid="StateInstanceFields" />
		FROM
		${TABLE_PREFIX}state_inst
		WHERE
		machine_inst_id = #{machineInstanceId, jdbcType=VARCHAR}
		AND
		id = #{id, jdbcType=VARCHAR}
	</select>
	<!-- **********************************************************************-->

</mapper>