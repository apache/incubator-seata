<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.apache.seata</groupId>
        <artifactId>seata-dependencies-base</artifactId>
        <version>${revision}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>seata-dependencies-common</artifactId>

    <packaging>pom</packaging>

    <name>Seata dependencies-common ${project.version}</name>
    <description>dependencies-common for Seata built with Maven</description>

    <properties>
        <!-- javax -->
        <javax-inject.version>1</javax-inject.version>
        <!-- guava -->
        <guava.version>32.1.3-jre</guava.version>
        <!-- fastjson -->
        <fastjson.version>1.2.83</fastjson.version>
        <!-- mock-redis-server -->
        <mock-jedis.version>0.3.1</mock-jedis.version>
        <!-- zookeeper -->
        <zkclient.version>0.11</zkclient.version>
        <apache-zookeeper.version>3.7.2</apache-zookeeper.version>

        <!-- for compressor -->
        <ant.version>1.10.12</ant.version>
        <lz4.version>1.7.1</lz4.version>
        <zstd.version>1.5.0-4</zstd.version>

        <!-- for config -->
        <config.version>1.2.1</config.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <apollo-client.version>2.0.1</apollo-client.version>

        <!-- for config and discovery -->
        <consul-clients.version>1.4.2</consul-clients.version>
        <nacos-client.version>1.4.6</nacos-client.version>
        <etcd-client-v3.version>0.5.0</etcd-client-v3.version>

        <!-- for discovery -->
        <jettison.version>1.5.4</jettison.version>
        <testcontainers.version>1.11.2</testcontainers.version>
        <archaius-core.version>0.7.6</archaius-core.version>
        <sofa.registry.version>6.3.0</sofa.registry.version>
        <sofa.hessian.version>4.0.3</sofa.hessian.version>
        <sofa.bolt.version>1.6.7</sofa.bolt.version>
        <eureka-clients.version>1.10.18</eureka-clients.version>
        <curator-test.version>5.1.0</curator-test.version>
        <native-lib-loader.version>2.4.0</native-lib-loader.version>
        <xstream.version>1.4.20</xstream.version>

        <!-- for serializer -->
        <protobuf.version>3.16.3</protobuf.version>
        <kryo.version>5.4.0</kryo.version>
        <kryo-serializers.version>0.45</kryo-serializers.version>
        <hessian.version>4.0.63</hessian.version>

        <!-- for database -->
        <!-- Database Driver -->
        <mysql.version>5.1.42</mysql.version>
        <ojdbc.version>19.3.0.0</ojdbc.version>
        <dm.version>8.1.2.192</dm.version>
        <postgresql.version>42.3.8</postgresql.version>
        <h2.version>1.4.181</h2.version>
        <mariadb.version>2.7.2</mariadb.version>
        <!-- Database Connection Pooling -->
        <druid.version>1.2.7</druid.version>
        <commons-dbcp2.version>2.9.0</commons-dbcp2.version>
        <hikari.version>3.4.3</hikari.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- javax -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax-inject.version}</version>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- mock-redis-server -->
            <dependency>
                <groupId>com.github.microwww</groupId>
                <artifactId>redis-server</artifactId>
                <version>${mock-jedis.version}</version>
            </dependency>

            <!-- zookeeper -->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${apache-zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Database Connection Pooling -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${commons-dbcp2.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikari.version}</version>
            </dependency>

            <!-- Database Driver -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.dameng</groupId>
                <artifactId>DmJdbcDriver18</artifactId>
                <version>${dm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.version}</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <!-- for serializer -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <dependency>
                <groupId>de.javakaffee</groupId>
                <artifactId>kryo-serializers</artifactId>
                <version>${kryo-serializers.version}</version>
            </dependency>
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${hessian.version}</version>
            </dependency>

            <!-- region for compressor -->
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.luben</groupId>
                <artifactId>zstd-jni</artifactId>
                <version>${zstd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lz4</groupId>
                <artifactId>lz4-java</artifactId>
                <version>${lz4.version}</version>
            </dependency>
            <!-- endregion for compressor -->

            <!-- region for config and discovery -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ecwid.consul</groupId>
                <artifactId>consul-api</artifactId>
                <version>${consul-clients.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-core</artifactId>
                <version>${etcd-client-v3.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-codec-http</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-codec-http2</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-handler-proxy</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-handler</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- endregion for config and discovery -->

            <!-- for config -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${config.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo-client.version}</version>
            </dependency>

            <!-- region # for discovery -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <version>${curator-test.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alipay.sofa</groupId>
                <artifactId>registry-client-all</artifactId>
                <version>${sofa.registry.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alipay.sofa.lookout</groupId>
                        <artifactId>lookout-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.alipay.sofa</groupId>
                        <artifactId>hessian</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alipay.sofa</groupId>
                <artifactId>hessian</artifactId>
                <version>${sofa.hessian.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alipay.sofa</groupId>
                <artifactId>bolt</artifactId>
                <version>${sofa.bolt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.eureka</groupId>
                <artifactId>eureka-client</artifactId>
                <version>${eureka-clients.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jettison</groupId>
                        <artifactId>jettison</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>${jettison.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.archaius</groupId>
                <artifactId>archaius-core</artifactId>
                <version>${archaius-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-launcher</artifactId>
                <version>${etcd-client-v3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.scijava</groupId>
                        <artifactId>native-lib-loader</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-compress</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.scijava</groupId>
                <artifactId>native-lib-loader</artifactId>
                <version>${native-lib-loader.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>*</artifactId>
                        <groupId>org.glassfish.jersey</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>xmlpull</artifactId>
                        <groupId>xmlpull</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- endregion # for discovery -->
        </dependencies>
    </dependencyManagement>

    <profiles>
        <!--
          For test in github workflow `test.yml`.
          Make the dependencies version change with the `spring-boot-dependencies`, expanding the scope of testing.
        -->
        <profile>
            <id>priority-spring-boot-dependencies</id>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                        <version>${spring-boot-dependencies.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>
</project>
